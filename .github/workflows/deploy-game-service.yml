name: Deploy Game Service

on:
  push:
    paths:
      - 'overlays/dev/game-service/kustomization.yaml'
      - 'game-service/**'
      - '.github/workflows/deploy-game-service.yml'
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout CD repo
      uses: actions/checkout@v4

    - name: Install Kustomize
      run: |
        curl -s https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh | bash
        sudo mv kustomize /usr/local/bin/

    # - name: Set up Kubeconfig
    #   run: echo "${{ secrets.KUBECONFIG_DATA }}" > kubeconfig.yaml

    - name: Build manifest with Kustomize
      run: kustomize build overlays/dev/game-service > deploy.yaml

    - name: Determine active deployment
      id: deployment
      run: |
        # ACTIVE=$(kubectl get svc game-service -o=jsonpath='{.spec.selector.app}')
        ACTIVE="game-service-green"  # Simulating active deployment for demonstration
        echo "Current live deployment: $ACTIVE"
        if [[ "$ACTIVE" == "game-service-green" ]]; then
          echo "deployment=blue" >> $GITHUB_OUTPUT
        else
          echo "deployment=green" >> $GITHUB_OUTPUT
        fi

    - name: Build and deploy inactive deployment
      run: |
        DEPLOYMENT=${{ steps.deployment.outputs.deployment }}
        echo "Deploying to: $DEPLOYMENT"
        kustomize build overlays/dev/game-service-${DEPLOYMENT} > deploy.yaml
        # kubectl apply -f deploy.yaml
    
    - name: Deploy to Kubernetes
      run: |
        cat deploy.yaml

    - name: Wait for rollout
      run: |
        DEPLOYMENT=${{ steps.deployment.outputs.deployment }}
        echo "Waiting for deployment game-service-${DEPLOYMENT} to be ready"
        # kubectl rollout status deployment game-service-${DEPLOYMENT} --timeout=60s

    - name: Switch Service to new deployment
      run: |
        DEPLOYMENT=${{ steps.deployment.outputs.deployment }}

        cat <<EOF > patched-service.yaml
        apiVersion: v1
        kind: Service
        metadata:
          name: game-service
        spec:
          selector:
            app: game-service-${DEPLOYMENT}
          ports:
            - protocol: TCP
              port: 80
              targetPort: 8080
        EOF
        # kubectl patch svc game-service -p "{\"spec\": {\"selector\": {\"app\": \"game-service-${DEPLOYMENT}\"}}}" --dry-run=client -o yaml > patched-service.yaml
        cat patched-service.yaml
